// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Data.Entities;

#nullable disable

namespace WebApp.Data.Migrations
{
    [DbContext(typeof(ObsDbContext))]
    [Migration("20230304124126_Initdb")]
    partial class Initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.Property<int>("DerslerId")
                        .HasColumnType("int");

                    b.Property<int>("OgrencilerId")
                        .HasColumnType("int");

                    b.HasKey("DerslerId", "OgrencilerId");

                    b.HasIndex(new[] { "OgrencilerId" }, "IX_DersOgrenci_OgrencilerId");

                    b.ToTable("DersOgrenci", (string)null);
                });

            modelBuilder.Entity("DersOgretman", b =>
                {
                    b.Property<int>("DerslerId")
                        .HasColumnType("int");

                    b.Property<int>("OgretmenlerId")
                        .HasColumnType("int");

                    b.HasKey("DerslerId", "OgretmenlerId");

                    b.HasIndex(new[] { "OgretmenlerId" }, "IX_DersOgretmen_OgretmenlerId");

                    b.ToTable("DersOgretmen", (string)null);
                });

            modelBuilder.Entity("WebApp.Data.Entities.Bolumler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OgretmenId" }, "IX_Bolumler_OgretmenId")
                        .IsUnique();

                    b.ToTable("Bolumler", (string)null);
                });

            modelBuilder.Entity("WebApp.Data.Entities.Dersler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Adi" }, "IX_Dersler_Adi")
                        .IsUnique()
                        .HasFilter("([Adi] IS NOT NULL)");

                    b.ToTable("Dersler", (string)null);
                });

            modelBuilder.Entity("WebApp.Data.Entities.Ogrenciler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Eposta")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("EPosta");

                    b.Property<string>("GobekAdi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Adi", "Soyadi" }, "IX_Ogrenciler_Adi_Soyadi")
                        .IsUnique()
                        .HasFilter("([Adi] IS NOT NULL AND [Soyadi] IS NOT NULL)");

                    b.ToTable("Ogrenciler", (string)null);
                });

            modelBuilder.Entity("WebApp.Data.Entities.Ogretmenler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Eposta")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("EPosta");

                    b.Property<string>("GobekAdi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ogretmenler", (string)null);
                });

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.HasOne("WebApp.Data.Entities.Dersler", null)
                        .WithMany()
                        .HasForeignKey("DerslerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Data.Entities.Ogrenciler", null)
                        .WithMany()
                        .HasForeignKey("OgrencilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DersOgretman", b =>
                {
                    b.HasOne("WebApp.Data.Entities.Dersler", null)
                        .WithMany()
                        .HasForeignKey("DerslerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Data.Entities.Ogretmenler", null)
                        .WithMany()
                        .HasForeignKey("OgretmenlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp.Data.Entities.Bolumler", b =>
                {
                    b.HasOne("WebApp.Data.Entities.Ogretmenler", "Ogretmen")
                        .WithOne("Bolumler")
                        .HasForeignKey("WebApp.Data.Entities.Bolumler", "OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("WebApp.Data.Entities.Ogretmenler", b =>
                {
                    b.Navigation("Bolumler");
                });
#pragma warning restore 612, 618
        }
    }
}
