// <auto-generated />
using CoreWeb7.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreWeb7.Migrations
{
    [DbContext(typeof(OBSContext))]
    [Migration("20230304074112_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreWeb7.Data.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OgretmenId")
                        .IsUnique();

                    b.ToTable("Bolumler");
                });

            modelBuilder.Entity("CoreWeb7.Data.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Adi")
                        .IsUnique()
                        .HasFilter("[Adi] IS NOT NULL");

                    b.ToTable("Dersler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "JS"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Sql"
                        });
                });

            modelBuilder.Entity("CoreWeb7.Data.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("EPosta")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("GobekAdi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("Adi", "Soyadi")
                        .IsUnique()
                        .HasFilter("[Adi] IS NOT NULL AND [Soyadi] IS NOT NULL");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("CoreWeb7.Data.Ogretmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("EPosta")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("GobekAdi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Ogretmenler");
                });

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.Property<int>("DerslerId")
                        .HasColumnType("int");

                    b.Property<int>("OgrencilerId")
                        .HasColumnType("int");

                    b.HasKey("DerslerId", "OgrencilerId");

                    b.HasIndex("OgrencilerId");

                    b.ToTable("DersOgrenci");
                });

            modelBuilder.Entity("DersOgretmen", b =>
                {
                    b.Property<int>("DerslerId")
                        .HasColumnType("int");

                    b.Property<int>("OgretmenlerId")
                        .HasColumnType("int");

                    b.HasKey("DerslerId", "OgretmenlerId");

                    b.HasIndex("OgretmenlerId");

                    b.ToTable("DersOgretmen");
                });

            modelBuilder.Entity("CoreWeb7.Data.Bolum", b =>
                {
                    b.HasOne("CoreWeb7.Data.Ogretmen", "Ogretmen")
                        .WithOne("Bolum")
                        .HasForeignKey("CoreWeb7.Data.Bolum", "OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.HasOne("CoreWeb7.Data.Ders", null)
                        .WithMany()
                        .HasForeignKey("DerslerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWeb7.Data.Ogrenci", null)
                        .WithMany()
                        .HasForeignKey("OgrencilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DersOgretmen", b =>
                {
                    b.HasOne("CoreWeb7.Data.Ders", null)
                        .WithMany()
                        .HasForeignKey("DerslerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWeb7.Data.Ogretmen", null)
                        .WithMany()
                        .HasForeignKey("OgretmenlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWeb7.Data.Ogretmen", b =>
                {
                    b.Navigation("Bolum");
                });
#pragma warning restore 612, 618
        }
    }
}
